<%- include('./partials/head.ejs') %>
<main class="mx-auto max-w-6xl mt-10">
	<div class="mb-3">
		<div class="relative mb-4 flex max-w-md flex-wrap items-stretch">
			<input
				id="datatable-search-input"
				type="search"
				class="relative m-0 -mr-0.5 block w-[1px] min-w-0 flex-auto rounded border border-solid border-neutral-300 bg-transparent bg-clip-padding px-3 py-[0.25rem] text-base font-normal leading-[1.6] text-neutral-700 outline-none transition duration-200 ease-in-out focus:z-[3] focus:border-primary focus:text-neutral-700 focus:shadow-[inset_0_0_0_1px_rgb(59,113,202)] focus:outline-none dark:border-neutral-600 dark:text-neutral-200 dark:placeholder:text-neutral-200 dark:focus:border-primary"
				placeholder="Search"
				aria-label="Search"
				aria-describedby="button-addon1"
			/>
		</div>
	</div>
	<div
		class=""
		data-te-clickable-rows="true"
		data-te-selectable="true"
		data-te-multi="true"
		id="datatable"
	></div>
	<div
		class="fixed left-0 top-0 z-[1055] hidden h-full w-full overflow-y-auto overflow-x-hidden outline-none"
		id="modal-clickable-rows"
		tabindex="-1"
		aria-labelledby="exampleModalLabel"
		aria-hidden="true"
		data-te-modal-init
	>
		<div
			data-te-modal-dialog-ref
			class="pointer-events-none relative w-auto translate-y-[-50px] opacity-0 transition-all duration-300 ease-in-out min-[576px]:mx-auto min-[576px]:mt-7 min-[576px]:max-w-[500px]"
		>
			<div
				class="min-[576px]:shadow-[0_0.5rem_1rem_rgba(#000, 0.15)] pointer-events-auto relative flex w-full flex-col rounded-md border-none bg-white bg-clip-padding text-current shadow-lg outline-none dark:bg-neutral-600"
			>
				<div
					id="modal-header-clickable-rows"
					class="flex flex-shrink-0 items-center justify-between rounded-t-md border-b-2 border-neutral-100 border-opacity-100 p-4 dark:border-opacity-50"
				>
					<!--Modal title-->
					<h5
						class="text-xl font-medium leading-normal text-neutral-800 dark:text-neutral-200"
						id="exampleModalLabel"
					>
						Modal title
					</h5>
				</div>

				<!--Modal body-->
				<div
					id="modal-body-clickable-rows"
					class="relative flex-auto p-4"
					data-te-modal-body-ref
				>
					Modal body text goes here.
				</div>

				<!--Modal footer-->
				<div
					class="flex flex-shrink-0 flex-wrap items-center justify-end rounded-b-md border-t-2 border-neutral-100 border-opacity-100 p-4 dark:border-opacity-50"
				>
					<button
						type="button"
						class="flex items-center rounded border border-primary px-5 pb-1.5 pt-2 text-xs font-medium uppercase leading-normal text-primary-700 transition duration-150 ease-in-out focus:outline-none focus:ring-0 dark:border-primary-400 dark:text-primary-400"
						data-te-ripple-init
						data-te-ripple-color="dark"
					>
						Reply
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="ml-2 h-5 w-5"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5"
							/>
						</svg>
					</button>
					<button
						type="button"
						class="ml-1 flex items-center rounded border border-primary px-5 pb-1.5 pt-2 text-xs font-medium uppercase leading-normal text-primary-700 transition duration-150 ease-in-out dark:border-primary-400 dark:text-primary-400"
						data-te-ripple-init
						data-te-ripple-color="dark"
					>
						Forward
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="ml-2 h-5 w-5"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
							/>
						</svg>
					</button>
				</div>
			</div>
		</div>
	</div>
</main>
<pre class="hidden" id="job-applics">
  <%= JSON.stringify(userJobApplications) %>

</pre>
<%- include('./partials/footer.ejs') %>

<script>
		const _rows = JSON.parse(document.querySelector("#job-applics").textContent);
		const data = {
			columns: ["Job title", "content", "Date"],
			_rows,
		};

		<!-- const instance = new te.Datatable(document.getElementById("datatable"), data); -->



		const table = document.getElementById("datatable");
		const modal = document.getElementById("modal-clickable-rows");
		const modalBody = document.getElementById("modal-body-clickable-rows");
		const modalHeader = document.getElementById("modal-header-clickable-rows");

		const modalInstance = new te.Modal(modal);

		const setupButtons = (action) => {
			document.querySelectorAll(`.${action}-email-button`).forEach((button) => {
				button.addEventListener("click", (e) => {
					e.stopPropagation();

					const index = button.getAttribute("data-te-index");

					console.log(`${action} message: ${index}`, rows[index]);
				});
			});
		};

		const columnsClickable = [
			{ label: "Actions", field: "actions", sort: false },
			{ label: "Job title", field: "title" },
			{ label: "Content", field: "content" },
	     { label: "Date", field: "created_at" },
		];

		const rows = _rows
		const rowsClickable = rows.map((row, i) => {
			const getPreview = (message, length) => {
				if (message.length <= length) return message;

				return `${message.slice(0, length)}...`;
			};
	      console.log(getPreview(row.content, 20))
			return {
				...row,created_at:new Date(row.created_at).toLocaleDateString(),title:row.job.title,
				content: getPreview(row.content.replace(/(<([^>]+)>)/gi, " "), 20),
				actions: `
	    <div class="flex">
	      <a role="button" class="star-email-button text-warning" data-te-index="${i}">
	        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
	          <path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
	        </svg>
	      </a>
	      <a role="button" class="delete-email-button text-neutral-300 ms-2" data-te-index="${i}">
	        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
	          <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
	        </svg>
	      </a>
	    </div>
	  `,
			};
		});

		table.addEventListener("rowClick.te.datatable", (e) => {
			const { index } = e;
			const { content, job:{title,...obj_job}, created_at,...obj } = rows[index];

			modalHeader.innerHTML = `
	  <h5 class="text-xl font-medium leading-normal text-neutral-800 dark:text-neutral-200">${title}</h5>
	  <button
	    id="close-button"
	    type="button"
	    class="box-content rounded-none border-none hover:no-underline hover:opacity-75 focus:opacity-100 focus:shadow-none focus:outline-none"
	    data-te-modal-dismiss
	    aria-label="Close">
	    <svg
	      xmlns="http://www.w3.org/2000/svg"
	      fill="currentColor"
	      viewBox="0 0 24 24"
	      stroke-width="1.5"
	      stroke="currentColor"
	      class="h-6 w-6">
	      <path
	        stroke-linecap="round"
	        stroke-linejoin="round"
	        d="M6 18L18 6M6 6l12 12" />
	    </svg>
	  </button>`;
			modalBody.innerHTML = `
	  <h6 class="mb-4">From: <strong>${title}</strong></h6>
	  <div>${content}</div>
	`;

			modalInstance.show();
			document.getElementById("close-button").addEventListener("click", () => {
				modalInstance.hide();
			});
		});

		table.addEventListener("render.te.datatable", () => {
			setupButtons("star");
			setupButtons("delete");
		});

		const datatableInstance = new te.Datatable(table, {
			columns: columnsClickable,
			rows: rowsClickable,
		});

	   	document
			.getElementById("datatable-search-input")
			.addEventListener("input", (e) => {
				datatableInstance.search(e.target.value);
			});
</script>
