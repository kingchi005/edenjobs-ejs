<%- include('./partials/head.ejs') %>
<div class="flex flex-col items-center justify-center py-10">
	<div
		class="block w-[1000px] max-w-sm rounded-lg p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700"
	>
		<div
			id="alert"
			class="mb-4 rounded-lg hidden bg-danger-100 px-6 py-5 text-base text-danger-700"
			role="alert"
			data-te-alert-init
			data-te-autohide="true"
			data-te-delay="4000"
		>
			A simple danger alertâ€”check it out!
		</div>
		<h1 class="text-lg">Login</h1>
		<div class="p-5">
			<img class="w-10 rounded-md" src="/logo.jpg" alt="logo" />
		</div>
		<form id="form-0" data-te-validation-init data-te-active-validation="true">
			<!--E-mail input-->
			<div
				class="relative mb-6"
				data-te-input-wrapper-init
				data-te-validate="input"
				data-te-validation-ruleset="isRequired"
				data-te-invalid-feedback="Email or username is required"
				data-te-valid-feedback=" "
			>
				<input
					value="sdkjbnmsdn"
					name="identifier"
					type="username"
					class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 data-[te-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-neutral-200 dark:placeholder:text-neutral-200 [&:not([data-te-input-placeholder-active])]:placeholder:opacity-0"
					id="exampleInputEmail2"
					aria-describedby="emailHelp"
					placeholder="Enter email or username"
				/>
				<label
					for="exampleInputEmail2"
					class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[te-input-state-active]:-translate-y-[0.9rem] peer-data-[te-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary"
					>Email address</label
				>
			</div>

			<!--Password input-->
			<div
				class="relative mb-6"
				data-te-input-wrapper-init
				data-te-validate="input"
				data-te-validation-ruleset="isRequired"
				data-te-input-wrapper-init
				data-te-invalid-feedback="Password is required"
				data-te-valid-feedback=" "
			>
				<input
					value="sdkjbnmsdn"
					name="password"
					type="password"
					class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 data-[te-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-neutral-200 dark:placeholder:text-neutral-200 [&:not([data-te-input-placeholder-active])]:placeholder:opacity-0"
					id="exampleInputPassword2"
					placeholder="Password"
				/>
				<label
					for="exampleInputPassword2"
					class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[te-input-state-active]:-translate-y-[0.9rem] peer-data-[te-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary"
					>Password</label
				>
			</div>

			<!--Remember me checkbox-->
			<div class="mb-6 sm:flex items-center justify-between">
				<!-- <div class="block min-h-[1.5rem] pl-[1.5rem]">
					<input
						class="relative float-left -ml-[1.5rem] mr-[6px] mt-[0.15rem] h-[1.125rem] w-[1.125rem] appearance-none rounded-[0.25rem] border-[0.125rem] border-solid border-neutral-300 outline-none before:pointer-events-none before:absolute before:h-[0.875rem] before:w-[0.875rem] before:scale-0 before:rounded-full before:bg-transparent before:opacity-0 before:shadow-[0px_0px_0px_13px_transparent] before:content-[''] checked:border-primary checked:bg-primary checked:before:opacity-[0.16] checked:after:absolute checked:after:-mt-px checked:after:ml-[0.25rem] checked:after:block checked:after:h-[0.8125rem] checked:after:w-[0.375rem] checked:after:rotate-45 checked:after:border-[0.125rem] checked:after:border-l-0 checked:after:border-t-0 checked:after:border-solid checked:after:border-white checked:after:bg-transparent checked:after:content-[''] hover:cursor-pointer hover:before:opacity-[0.04] hover:before:shadow-[0px_0px_0px_13px_rgba(0,0,0,0.6)] focus:shadow-none focus:transition-[border-color_0.2s] focus:before:scale-100 focus:before:opacity-[0.12] focus:before:shadow-[0px_0px_0px_13px_rgba(0,0,0,0.6)] focus:before:transition-[box-shadow_0.2s,transform_0.2s] focus:after:absolute focus:after:z-[1] focus:after:block focus:after:h-[0.875rem] focus:after:w-[0.875rem] focus:after:rounded-[0.125rem] focus:after:content-[''] checked:focus:before:scale-100 checked:focus:before:shadow-[0px_0px_0px_13px_#3b71ca] checked:focus:before:transition-[box-shadow_0.2s,transform_0.2s] checked:focus:after:-mt-px checked:focus:after:ml-[0.25rem] checked:focus:after:h-[0.8125rem] checked:focus:after:w-[0.375rem] checked:focus:after:rotate-45 checked:focus:after:rounded-none checked:focus:after:border-[0.125rem] checked:focus:after:border-l-0 checked:focus:after:border-t-0 checked:focus:after:border-solid checked:focus:after:border-white checked:focus:after:bg-transparent dark:border-neutral-600 dark:checked:border-primary dark:checked:bg-primary dark:focus:before:shadow-[0px_0px_0px_13px_rgba(255,255,255,0.4)] dark:checked:focus:before:shadow-[0px_0px_0px_13px_#3b71ca]"
						type="checkbox"
						value=""
						id="exampleCheck2"
					/>
					<label
						class="inline-block pl-[0.15rem] hover:cursor-pointer"
						for="exampleCheck2"
					>
						Remember me
					</label>
				</div> -->

				<!--Forgot password link-->
				<a
					href="#!"
					class="text-primary transition duration-150 ease-in-out hover:text-primary-600 focus:text-primary-600 active:text-primary-700 dark:text-primary-400 dark:hover:text-primary-500 dark:focus:text-primary-500 dark:active:text-primary-600"
					>Forgot password?</a
				>
			</div>

			<!--Sign in button-->
			<button
				id="submit"
				type="submit"
				name="btn"
				class="dark:active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]] inline-block w-full rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-[0_4px_9px_-4px_#3b71ca] transition duration-150 ease-in-out hover:bg-primary-600 hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:bg-primary-600 focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] focus:outline-none focus:ring-0 active:bg-primary-700 active:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.3),0_4px_18px_0_rgba(59,113,202,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(59,113,202,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(59,113,202,0.2),0_4px_18px_0_rgba(59,113,202,0.1)]"
				data-te-ripple-init
				data-te-submit-btn-ref
				data-te-ripple-color="light"
			>
				Sign in
			</button>

			<!--Register link-->
			<p class="mt-6 text-center text-neutral-800 dark:text-neutral-200">
				Not a member?
				<a
					href="#!"
					class="text-primary transition duration-150 ease-in-out hover:text-primary-600 focus:text-primary-600 active:text-primary-700 dark:text-primary-400 dark:hover:text-primary-500 dark:focus:text-primary-500 dark:active:text-primary-600"
					>Register</a
				>
			</p>
		</form>
	</div>
</div>

<%- include('./partials/footer.ejs') %>

<script>
	// initTE({ Ripple, Input });

	const form = document.querySelector("form");
	const submit = document.querySelector("button#submit");
	const alertContainer = document.getElementById("alert");
	const alertInstance = te.Alert.getInstance(alertContainer);
	const fullValidation = new te.Validation(form, {
		customErrorMessages: {
			contains: "The field must contain the '{contains}' word",
		},
		// customRules: {
		// 	contains: (value, message, string) => {
		// 		return value.includes(string)
		// 			? true
		// 			: message.replace("{contains}", string);
		// 	},
		// },
		submitCallback: async (e, valid) => {
			e.preventDefault();
			if (valid) {
				// console.log({
				// 	id: form.identifier.value,
				// 	pass: form.password.value,
				// });

				// validate

				submit.disabled = true;
				submit.innerHTML = `<div class="inline-block h-3 w-3 mr-2 animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]" role="status"	 > <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]"> Loading... </span> </div> Please wait`;

				try {
					let body = new FormData(form);
					const res = await (
						await fetch("/api/auth/login", {
							method: "post",
							headers: {},
							body,
						})
					).json();
					console.log(res);
					if (!res.ok) {
						alertContainer.innerHTML = res.error.message;
						alertInstance.show();
					} else {
						if (res.details.user.is_applicant)
							location.assign("/applicant/dashboard");
						else location.assign("/employer/dashboard");
					}
				} catch (error) {
					console.log(error);
				} finally {
					submit.disabled = false;
					submit.innerHTML = "Sign in";
				}
			}
		},
	});
	// form.addEventListener("", function (e) {
	// 	e.preventDefault();

	// 	console.log({
	// 		id: e.target.identifier.value,
	// 		pass: e.target.password.value,
	// 	});

	// 	// validate

	// 	submit.disabled = true;
	// 	submit.innerHTML = `<div class="inline-block h-3 w-3 mr-2 animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]" role="status"	 > <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]"> Loading... </span> </div> Please wait`;
	// });
</script>
